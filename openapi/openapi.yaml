openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks or tasks specific user
      tags:
        - tasks
      parameters:
        - name: userID
          in: query
          description: The ID of the user to return the tasks for
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    patch:
      summary: Update the task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: The task fields to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: string
                is_done:
                  type: boolean
                user_id:
                  type: integer
                  nullable: true
      responses:
        '200':
          description: The update task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request
        '404':
          description: Task not found
    delete:
      summary: Delete a task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Task successfully deleted
        '400':
          description: Invalid task ID
        '404':
          description: Task not found
        '500':
          description: Internal server error
  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The create user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    patch:
      summary: Update a user
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: The user fieds to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: The update user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '404':
          description: User not found
    delete:
      summary: Delete a user
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User successfully deleted
        '400':
          description: Invalid user ID
        '404':
          description: User not found
        '500':
          description: Internal server error
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: uint
        task:
          type: string
        is_done:
          type: boolean
        user_id:
          type: integer
          format: uint
    User:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        password:
          type: string
